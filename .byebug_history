skip
ApiNoticia::Models::Publicacao.last
skip
context.publicacao.id
response_aws
skip
ApiNoticia::Models::Publicacao.last
skip
attributes_publicacao[:file_imagem].class
attributes_publicacao
context.publicacao_params[:file_imagem].present?
skip
context.publicacao_params[:file_imagem].present?
skip
context.publicacao
skip
context.publicacao_params[:file_imagem].present?
skip
attributes_publicacao
skip
context.publicacao_params[:file_imagem].present?
attributes_publicacao
skip
context.publicacao_params[:file_imagem].present?
skip
context.publicacao_params[:file_imagem].present?
skip
context.publicacao_params[:file_imagem]
skip
publicacao.data_criacao
publicacao.data_criacao.iso8601
skip
expect_json(data_criacao: publicacao.data_criacao.to_i).to eq(data_criacao.to_i)
        expect_json(data_criacao: publicacao.data_criacao) == data_criacao
        expect_json(data_criacao: publicacao.data_criacao).to_i
skip
publicacao.data_criacao.to_i
skip
expect_json(id: publicacao.id, titulo: publicacao.titulo, subtitulo: publicacao.subtitulo, url_imagem_principal: publicacao.url_imagem_principal, data_criacao: publicacao.data_criacao)
expect_json(id: publicacao.id, titulo: publicacao.titulo, subtitulo: publicacao.subtitulo, url_imagem_principal: publicacao.url_imagem_principal, 
publicacao.categorias
skip
publicacao.url_imagem_principal
publicacao
skip
attributes_publicacao[:file_imagem]
skip
attributes_publicacao[:file_imagem]
skip
attributes_publicacao[:file_imagem] = File.open('/noticia/spec/testes/imagens/imagem-teste.jpg')
skip
File.open('/noticia/spec/testes/imagens/imagem-teste.jpg')
skip
arquivo = File.open('D://lucarlos//api_noticia//spec//testes//imagens//imagem-teste.jpg')
arquivo = File.open('D:\lucarlos\api_noticia\spec\testes\imagens\imagem-teste.jpg')
attributes_publicacao[:file_imagem] = File.write('D:\lucarlos\api_noticia\spec\testes\imagens\imagem-teste.jpg')
attributes_publicacao[:file_imagem] = File.open('D:\lucarlos\api_noticia\spec\testes\imagens\imagem-teste.jpg')
attributes_publicacao[:file_imagem] = File.file('D:\lucarlos\api_noticia\spec\testes\imagens\imagem-teste.jpg')
skip
FileUtils.makedirs()
 attributes_publicacao[:file_imagem] = File.open('../imagens/imagem-teste.jpg')
skip
attributes_publicacao[:file_imagem]
skip
context.mensagem
context.fail!(mensagem: "teste")
context.status
context.fails!
context.mensagem
context.errors
skip
aws_response_img
skip
e.class
e
skip
Aws::S3::Client.new(region: 'sa-east-1') do |teste| puts "carlos silva" end
Aws::S3::Client.new(region: 'sa-east-1') do |teste| puts teste end
object_aws = Aws::S3::Client.new(region: 'sa-east-1') do |teste| puts teste end
object_aws = Aws::S3::Client.new(region: 'sa-east-1') do |teste|
object_aws = Aws::S3::Client.new(region: 'sa-east-1')
skip
aws_response_img
skip
file_imagem
attributes_publicacao
skip
attributes_publicacao
a.class
a = Faker::File.file_name(name: 'imagem', ext: 'jpeg')
Faker::File.file_name(name: 'imagem', ext: 'jpeg')
Faker::File.extension
skip
publicacao
skip
p.categoria
p.categorias
p.publicacao
p
exit
attributes
skip
attributes["categoria"]
attributes["categoria_id"]
attributes.class
attributes
skip
self.data_criacao
skip
publicacao
skip
body_json["resultados"][0]["categorias"]
body_json["resultados"][0]
body_json["resultados"]
body_json["resultados"]["categorias"]
body_json[:resultados]
body_json["resultados"]
body_json.resultados
body_json
body_json = HASH(response.body)
body_json.resultados
body_json[:resultados]
body_json = JSON(response.body)
r.actual
r.resultados
r['resultados']
r = response.body.should
response.body.should.resultados
response.body.should.actual
response.body.should.class
response.body.should
response.body.class
response.body[:resultados]
response.body.resultados
response.body
resultados
expect.methods
expect
expect_json_keys.methods
expect_json_keys[:resultados]
expect_json_keys
[:resultados][0][:id]
[:resultados][0].id
[:resultados].id
[:resultados][:id]
[:resultados]
skip
a.cache_control
a.buf
a = response.stream
response.stream.resultados
response.stream
response.str_body
response
response.header
response[:buf]
response.buf
response.class
response[:resultados]
response
response.resultados
expect_json_keys('resultados')
expect_json_keys(:resultados)
resultados
skip
context.publicacao.url_imagem_principal
skip
context.publicacao_params[:url_imagem_principal]
                                                        id_publicacao: context.publicacao.id).response_awscontext.publicacao_params[:url_imagem_principal
                                                  .call(arquivo_imagem: context.publicacao_params[:file_imagem],
Publicacao::AwsUploadImagemPrincipal
context.publicacao.url_imagem_principal
skip
context.publicacao.url_imagem_principal
skip
context.fail!
context.publicacao_
skip
context.publicacao_params
skip
context.fail!.mensagem
context.fail
context.fail.mensagem
context.mensagem!
context.mensagem
context.fail!
skip
context.fail!
skip
context.fail!
context.fail
@aws_response_img
skip
context.publicacao_params[:file_imagem]
context.publicacao_params.file_imagem
skip
context.publicacao_params
skip
context.publicacao_params
context.publicacao
skip
last_id
skip
ApiNoticia::Models::Publicacao.last.present?
skip
File.extname(arquivo_imagem)
File.extname("teste.txt")
arquivo_imagem.methods
arquivo_imagem.t
arquivo_imagem.methods.t
arquivo_imagem.format = "png"
arquivo_imagem.format?
arquivo_imagem.format
arquivo_imagem
img = Magick::Image.from_blob(context.arquivo_imagem).first
img = Magick::Image.from_blob(arquivo_imagem).first
arquivo_imagem.type
arquivo_imagem.name
arquivo_imagem.file_name
arquivo_imagem
arquivo_imagem.class
context.arquivo_imagem.to_io
context.arquivo_imagem.to_path
context.arquivo_imagem.class
arquivo_imagem.class
arquivo_imagem.methods
arquivo_imagem.content_typ
arquivo_imagem.type
context.arquivo_imagem.content_type
context.arquivo_imagem
arquivo_imagem
skip
aws_response_img
skip
@publicacao
skip
ApiNoticia::Models::Publicacao.last.id + 1
ApiNoticia::Models::Publicacao.last.id.more_one
ApiNoticia::Models::Publicacao.last.id.more
ApiNoticia::Models::Publicacao.last.id+
ApiNoticia::Models::Publicacao.last.id++
ApiNoticia::Models::Publicacao.last.id
ApiNoticia::Models::Publicacao.last
id
skip
context.mensagem
context.fails!
context.fails
context.errors
context.erros
skip
url_imagem_principal
skip
url_imagem_principal
skip
url_imagem_principal.aws_url_imagem
