skip
self.data_criacao
skip
publicacao
skip
body_json["resultados"][0]["categorias"]
body_json["resultados"][0]
body_json["resultados"]
body_json["resultados"]["categorias"]
body_json[:resultados]
body_json["resultados"]
body_json.resultados
body_json
body_json = HASH(response.body)
body_json.resultados
body_json[:resultados]
body_json = JSON(response.body)
r.actual
r.resultados
r['resultados']
r = response.body.should
response.body.should.resultados
response.body.should.actual
response.body.should.class
response.body.should
response.body.class
response.body[:resultados]
response.body.resultados
response.body
resultados
expect.methods
expect
expect_json_keys.methods
expect_json_keys[:resultados]
expect_json_keys
[:resultados][0][:id]
[:resultados][0].id
[:resultados].id
[:resultados][:id]
[:resultados]
skip
a.cache_control
a.buf
a = response.stream
response.stream.resultados
response.stream
response.str_body
response
response.header
response[:buf]
response.buf
response.class
response[:resultados]
response
response.resultados
expect_json_keys('resultados')
expect_json_keys(:resultados)
resultados
skip
context.publicacao.url_imagem_principal
skip
context.publicacao_params[:url_imagem_principal]
                                                        id_publicacao: context.publicacao.id).response_awscontext.publicacao_params[:url_imagem_principal
                                                  .call(arquivo_imagem: context.publicacao_params[:file_imagem],
Publicacao::AwsUploadImagemPrincipal
context.publicacao.url_imagem_principal
skip
context.publicacao.url_imagem_principal
skip
context.fail!
context.publicacao_
skip
context.publicacao_params
skip
context.fail!.mensagem
context.fail
context.fail.mensagem
context.mensagem!
context.mensagem
context.fail!
skip
context.fail!
skip
context.fail!
context.fail
@aws_response_img
skip
context.publicacao_params[:file_imagem]
context.publicacao_params.file_imagem
skip
context.publicacao_params
skip
context.publicacao_params
context.publicacao
skip
last_id
skip
ApiNoticia::Models::Publicacao.last.present?
skip
File.extname(arquivo_imagem)
File.extname("teste.txt")
arquivo_imagem.methods
arquivo_imagem.t
arquivo_imagem.methods.t
arquivo_imagem.format = "png"
arquivo_imagem.format?
arquivo_imagem.format
arquivo_imagem
img = Magick::Image.from_blob(context.arquivo_imagem).first
img = Magick::Image.from_blob(arquivo_imagem).first
arquivo_imagem.type
arquivo_imagem.name
arquivo_imagem.file_name
arquivo_imagem
arquivo_imagem.class
context.arquivo_imagem.to_io
context.arquivo_imagem.to_path
context.arquivo_imagem.class
arquivo_imagem.class
arquivo_imagem.methods
arquivo_imagem.content_typ
arquivo_imagem.type
context.arquivo_imagem.content_type
context.arquivo_imagem
arquivo_imagem
skip
aws_response_img
skip
@publicacao
skip
ApiNoticia::Models::Publicacao.last.id + 1
ApiNoticia::Models::Publicacao.last.id.more_one
ApiNoticia::Models::Publicacao.last.id.more
ApiNoticia::Models::Publicacao.last.id+
ApiNoticia::Models::Publicacao.last.id++
ApiNoticia::Models::Publicacao.last.id
ApiNoticia::Models::Publicacao.last
id
skip
context.mensagem
context.fails!
context.fails
context.errors
context.erros
skip
url_imagem_principal
skip
url_imagem_principal
skip
url_imagem_principal.aws_url_imagem
url_imagem_principal
context.aws_url_imagem
skip
url_imagem_principal
skip
url_imagem_principal
skip
publicacao.url_imagem_principal
skip
publicacao
skip
context
context.aws_url_principal
context.url_imagem_principal
context.
context
publicacao
skip
url_aws_imagem
skip
context.aws_url_imagem
context.publicacao
skip
context.aws_url_imagem
teste
skip
context.aws_url_imagem
skip
context.aws_url_imagem
skip
context.aws_url_imagem
skip
@publicacao
skip
object_aws.uri
object_aws.url
object_aws.public_url
object_awl.public_url
response.public_url
response.etag.class
response.data
response.values
response.methods
response.endpoint
object_aws.endpoint
object_aws.meta
response.data
response.class
response.body
response.url
response.uri
response.class
skip
context.arquivo_imagem.tempfile
context.arquivo_imagem
context.arquivo_imagem.class
skip
img.filename
img.file_name
img.base_filename
img
img.filename?
img.filename = "teste"
img.filename
img.name
img
skip
img[0]
img[0].format = "png"
img[0].format("png")
img[0].write
img[0].read
img[0].methods
img[0]
img
img = Magick::Image.from_blob(context.arquivo_imagem.read)
img = Magick::Image.from_blob(context.arquivo_imagem.read.first)
img = Magick::Image.from_blob(context.arquivo_imagem.first.read)
img = Magick::Image.from_blob(context.arquivo_imagem.read).first
img.class
img.format = "png"
img.format("png")
img.format
img = Magick::Image.from_blob(context.arquivo_imagem.read)
img = Magick::Image.read(context.arquivo_imagem)
img = Magick::Image.read(context.arquivo_imagem).first
img = Magick::Image.read(context.arquivo_imagem.tempfile).first
context.arquivo_imagem
skip
context.arquivo_imagem.class
context.arquivo_imagem
skip
pp.context
pp.publicacao
pp.class
context.publicacao
pp
skip
response.etag
response.code
response.status
responde.status
responde.code
skip
file
skip
